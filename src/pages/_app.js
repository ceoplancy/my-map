import { useState, useEffect } from "react"
import GlobalStyle from "@/styles/global-style"
import Head from "next/head"
import { Hydrate, QueryClient, QueryClientProvider } from "react-query"
import { ReactQueryDevtools } from "react-query/devtools"
import { RecoilRoot } from "recoil"
import usePageLoading from "@/hooks/usePageLoading"
import GlobalSpinner from "@/component/global-spinner"
import Toast from "@/component/toast"
import { StyleSheetManager } from "styled-components"
import isPropValid from "@emotion/is-prop-valid"
import Script from "next/script"

const App = ({ Component, pageProps }) => {
  const [queryClient] = useState(() => new QueryClient())
  const loading = usePageLoading()
  const [mapLoaded, setMapLoaded] = useState(false)

  useEffect(() => {
    if (window.kakao && !mapLoaded) {
      window.kakao.maps.load(() => {
        console.log("Kakao Maps API loaded successfully")
        setMapLoaded(true)
        window.kakaoMapsLoaded = true
      })
    }
  }, [mapLoaded])

  return (
    <StyleSheetManager shouldForwardProp={isPropValid}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta
          name="viewport"
          content="width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <GlobalStyle />

      <QueryClientProvider client={queryClient}>
        <Hydrate state={pageProps.dehydratedState}>
          <RecoilRoot>
            {loading ? (
              <GlobalSpinner
                width={18}
                height={18}
                marginRight={18}
                dotColor="#8536FF"
              />
            ) : (
              <>
                <Toast />
                <Component {...pageProps} />
              </>
            )}
          </RecoilRoot>
        </Hydrate>

        <ReactQueryDevtools initialIsOpen={false} position="bottom-right" />
      </QueryClientProvider>

      <Script
        strategy="beforeInteractive"
        src={`https://dapi.kakao.com/v2/maps/sdk.js?appkey=${process.env.NEXT_PUBLIC_KAKAO_APP_KEY}&libraries=services&autoload=false`}
        onLoad={() => {
          try {
            window.kakao.maps.load(() => {
              console.log("Initial Kakao Maps load")
              window.kakaoMapsLoaded = true
              setMapLoaded(true)
            })
          } catch (error) {
            console.error("Kakao Maps load error:", error)
          }
        }}
      />
    </StyleSheetManager>
  )
}

export default App
